// Generated by CoffeeScript 1.6.3
(function() {
  var flexkbd, optionTabId, sendMessage, setConfigPlugin;

  window.fk = {};

  flexkbd = document.getElementById("flexkbd");

  sendMessage = function(message) {
    return chrome.tabs.query({
      active: true
    }, function(tabs) {
      return chrome.tabs.sendMessage(tabs[0].id, message);
    });
  };

  optionTabId = null;

  chrome.tabs.onActivated.addListener(function(activeInfo) {
    return chrome.tabs.get(activeInfo.tabId, function(tab) {
      if (tab.url.indexOf(chrome.extension.getURL("")) === 0) {
        flexkbd.StartConfigMode();
        return optionTabId = activeInfo.tabId;
      } else {
        if (optionTabId) {
          chrome.tabs.sendMessage(optionTabId, {
            action: "saveConfig"
          });
          return optionTabId = null;
        }
      }
    });
  });

  chrome.tabs.onUpdated.addListener(function(tabId, changeInfo, tab) {
    if (tab.url.indexOf(chrome.extension.getURL("")) === 0 && (changeInfo.status = "complete")) {
      return flexkbd.StartConfigMode();
    }
  });

  setConfigPlugin = function(keyConfigSet) {
    var sendData;
    sendData = [];
    if (keyConfigSet) {
      keyConfigSet.forEach(function(item) {
        return sendData.push(item.disShortcut + ";" + item.newShortcut + ";" + item.option);
      });
      return flexkbd.SetKeyConfig(sendData.join("|"));
    }
  };

  fk.saveConfig = function(saveData) {
    localStorage.flexkbd = JSON.stringify(saveData);
    return setConfigPlugin(saveData.keyConfigSet);
  };

  fk.getKeyCodes = function() {
    return {
      JP: {
        keys: keysJP,
        name: "JP 109 Keyboard"
      },
      US: {
        keys: keysUS,
        name: "US 104 Keyboard"
      }
    };
  };

  fk.getConfig = function() {
    return JSON.parse(localStorage.flexkbd || null) || {
      config: {
        kbdtype: "JP"
      }
    };
  };

  window.pluginEvent = function(action, value) {
    switch (action) {
      case "log":
        return console.log(value);
      case "kbdEvent":
        return sendMessage({
          action: "kbdEvent",
          value: value
        });
    }
  };

  setConfigPlugin(fk.getConfig().keyConfigSet);

}).call(this);
